services:
  airflow:
    build: .
    env_file: .env
    container_name: airflow
    restart: unless-stopped

    environment:
      PYTHONPATH: /opt/airflow
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db
      AIRFLOW__LOGGING__ENABLE_LOGGING_SYMLINKS: "False"


    volumes:
      - ./dags:/opt/airflow/dags
      - ./etl:/opt/airflow/etl
      - ./airflow_home:/opt/airflow
      - ./keys:/opt/airflow/keys:ro

    ports:
      - "8080:8080"
    command: >
      bash -c "
        airflow db migrate &&
        airflow users create --username admin --password admin --firstname Admin --lastname Admin --role Admin --email admin@example.com || true &&
        exec airflow webserver -p 8080
      "

  airflow-scheduler:
    build: .
    env_file: .env
    container_name: airflow-scheduler
    restart: unless-stopped
    environment:
      PYTHONPATH: /opt/airflow
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db
      AIRFLOW__LOGGING__ENABLE_LOGGING_SYMLINKS: "False"

    volumes:
      - ./dags:/opt/airflow/dags
      - ./etl:/opt/airflow/etl
      - ./airflow_home:/opt/airflow
      - ./keys:/opt/airflow/keys:ro
    command: "airflow scheduler"
